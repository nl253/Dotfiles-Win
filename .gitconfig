# vim:sw=2:ts=4:expandtab:
[init]
  templatedir = C:\\Users\\Kier\\.git-templates


[user]
  email = Norbert.Logiewa@searchflow.co.uk
  name = Norbert Logiewa

[core]
  excludesfile = C:\\Users\\nlogiewa\\.gitignore-global
  compression  = 9
  abbrev       = 9

[diff]
  renames    = copies  # Detect copies as well as renames
  tool       = vimdiff
  context    = 1
  algorithm  = minimal
  colorMoved = dimmed_zebra
  wordRegex  = \\w+
  indentHeuristic = true

[help]
  autocorrect = true

[difftool]
  prompt = true

[log]
  abbrevCommit = true
  # date         = format:%d-%m-%g %R
  date         = human

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix 

[web]
	browser = firefox-dev

[merge]
  tool      = vimdiff
  verbosity = 1
  summary   = true

[status]
  # showUntrackedFiles = all
  short = true

[format]
  pretty = %>(16)%ad %Cblue%>(22)%cN%Creset %Cgreen%h%Creset %s

[grep]
  threads = 4
  patternType = extended
  lineNumber = 1


[color]
  ui         = auto
  branch     = auto
  diff       = auto
  grep       = auto
  status     = auto
  showbranch = auto

# best not to touch these (very legible as is)
[color "diff"]
  meta = magenta
  frag = magenta bold # line info
  old  = red        # deletions
  new  = green         # additions

# best not to touch these (very legible as is)
[color "diff-highlight"]
  oldNormal    = "167 bold"
  oldHighlight = "167 reverse"
  newNormal    = "78"
  newHighlight = "78 reverse"
[color "status"]
  added     = green
  changed   = "yellow bold"
  untracked = "normal bold"
  header    = "white dim"
  nobranch  = "red dim"

[color "branch"]
  current = magenta bold
  local   = normal
  remote  = yellow

[gui]
  commitmsgwidth = 79
  fastcopyblame  = true
  fontui = -family \"Noto Sans\" -size 11 -weight normal -slant roman -underline 0 -overstrike 0
  fontdiff = -family \"Fira Code\" -size 12 -weight normal -slant roman -underline 0 -overstrike 0
  warndetachedcommit = true
  pruneduringfetch = true
  matchtrackingbranch = true
  diffopts = -w
  tabsize = 4

[color "grep"]
  match      = yellow
  filename   = magenta
  linenumber = green
  separator  = white

[column]
  ui = auto
  status = auto
  branch = auto

[pack]
  compression = 9
  threads     = 4

[pager]
  diff        = off
  shortlog    = off
  add         = off
  aliases     = off
  archive     = off
  branch      = off
  checkout    = off
  clone       = off
  commit      = off
  fetch       = off
  gc          = off
  grep        = off
  init        = off
  log         = off
  ls-files    = off
  ls-remote   = off
  merge       = off
  mktag       = off
  mv          = off
  pull        = off
  reflog      = off
  rm          = off
  show-branch = off
  stash       = off
  status      = off
  tag         = off

[alias]

  worddiff = diff --word-diff=color -word-diff-regex="[A-Za-z0-9. ]|[^[:space:]]" 

  c = commit
  b = branch
  a = add
  l = log
  s = status
  d = diff -w -b --ignore-blank-lines --color-moved-ws=ignore-all-space

  find = log -G  
  find-added    = log --diff-filter=A -G  
  find-created  = log --diff-filter=A -G  
  find-deleted  = log --diff-filter=D -G  
  find-removed  = log --diff-filter=D -G  
  find-modified = log --diff-filter=M -G  
  find-changed  = log --diff-filter=M -G  

  unpushed = !git log "$(git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD))..HEAD"
  graph = log --graph 
  tree = log --graph 

  root      = rev-parse --show-toplevel

  ignored   = !git status --ignored | grep -E '^!' | sed -E 's/!! //' | sed -E 's/\\/$//' 
  untracked = ls-files . --ignored --exclude-standard --others

  branches = branch --format='%(if)%(HEAD)%(then)%(color:bold magenta)%(end)%(align:42,left)  %(refname:lstrip=2) %(end) %(color:bold yellow)%(objectname:short=10)%(color:reset) => %(color:bold blue)%(upstream:lstrip=2)'
  bs = branch --format='%(if)%(HEAD)%(then)%(color:bold magenta)%(end)%(align:42,left)  %(refname:lstrip=2) %(end) %(color:bold yellow)%(objectname:short=10)%(color:reset) => %(color:bold blue)%(upstream:lstrip=2)' 


  archive-zip = archive --format=zip --output=bundle.zip --verbose HEAD
  archive-tar = archive --format=tar --output=bundle.tar --verbose HEAD

  # remove local branches that don't have a corresponding remote branch 
  prune = remote prune <name>

  # search through history
  trace                   = log -L
  find-commit             = log --grep
  find-in-commit          = log -G  
  find-in-commit-added    = log --diff-filter=A -G  
  find-in-commit-created  = log --diff-filter=A -G  
  find-in-commit-deleted  = log --diff-filter=D -G  
  find-in-commit-removed  = log --diff-filter=D -G  
  find-in-commit-modified = log --diff-filter=M -G  
  find-in-commit-changed  = log --diff-filter=M -G  

  unpushed = log --branches --not --remotes --no-walk --decorate --oneline

  # Use the following command while being on "master", to list merged branches:
  merged-branches = "!f() { command git branch --merged | grep -v \"\\*\"; }; f ; unset -f f" 

  contributors = shortlog --summary --numbered
  # list aliases from this file
  aliases = "!git config -l | grep alias | sed 's/^alias\\.//g' | sed -E 's/=/%%%/' | column --table --output-separator ' ' --separator '%%%'"

[push]
  default = current

[branch]
  autoSetupMerge = true
  sort = refname
